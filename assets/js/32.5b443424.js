(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{183:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/book/5a124b29f265da431d3c472e/section/5a1451dd5188253293142cd7",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金小册——写错的不是最新的提交，而是倒数第二个"),s("OutboundLink")],1)]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/book/5a124b29f265da431d3c472e/section/5a14527351882509e5434ed4",target:"_blank",rel:"noopener noreferrer"}},[t._v("rebase 撤销提交"),s("OutboundLink")],1)]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._v(" "),s("p",[t._v("选用另一种策略：增加一个新的提交，把之前提交的内容抹掉")]),t._v(" "),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),s("p",[t._v("撤销指定文件的修改：")]),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._m(68),t._v(" "),s("p",[t._v("注意：不再被引用直接或间接指向的 commits 会在一定时间后被 Git 回收，所以使用 reflog 来找回删除的 branch 的操作一定要及时，不然有可能会由于 commit 被回收而再也找不回来。")]),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._m(72)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"git-高级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-高级"}},[this._v("#")]),this._v(" git 高级")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1、commit-amend-修改最新提交的代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、commit-amend-修改最新提交的代码"}},[this._v("#")]),this._v(" 1、commit --amend 修改最新提交的代码")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("使用 "),s("code",[t._v("git commit --amend")]),t._v(' ,"amend" 是「修正」的意思。在提交时，如果加上 '),s("code",[t._v("--amend")]),t._v(" 参数，Git 不会在当前 "),s("code",[t._v("commit")]),t._v(" 上增加 "),s("code",[t._v("commit")]),t._v("，而是会把当前 "),s("code",[t._v("commit")]),t._v(" 里的内容和暂存区（stageing area）里的内容合并起来后创建一个新的 "),s("code",[t._v("commit")]),t._v("，"),s("strong",[t._v("用这个新的 "),s("code",[t._v("commit")]),t._v(" 把当前 "),s("code",[t._v("commit")]),t._v(" 替换掉")]),t._v("。所以 "),s("code",[t._v("commit --amend")]),t._v(" 做的事就是它的字面意思：对最新一条 "),s("code",[t._v("commit")]),t._v(" 进行修正。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git add filename\ngit commit --amend\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2、写错的不是最新的提交，而是倒数第二个？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、写错的不是最新的提交，而是倒数第二个？"}},[this._v("#")]),this._v(" 2、写错的不是最新的提交，而是倒数第二个？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("rebase -i")]),this._v(" 是 "),e("code",[this._v("rebase --interactive")]),this._v(" 的缩写形式，意为「交互式 rebase」")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/rebase-i.png",alt:"图片"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"开启交互式-rebase-过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开启交互式-rebase-过程"}},[this._v("#")]),this._v(" 开启交互式 rebase 过程")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("使用方式是 "),s("code",[t._v("git rebase -i 目标commit")]),t._v("；")]),t._v(" "),s("li",[t._v("在编辑界面中指定需要操作的 "),s("code",[t._v("commit")]),t._v("s 以及操作类型；")]),t._v(" "),s("li",[t._v("操作完成之后用 "),s("code",[t._v("git rebase --continue")]),t._v(" 来继续 "),s("code",[t._v("rebase")]),t._v(" 过程。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git rebase -i HEAD^^\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/rebase-i-heaer.gif",alt:"图片"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("说明：在 Git 中，有两个「偏移符号」： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 和 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 的用法：在 commit 的后面加一个或多个 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 号，可以把 commit 往回偏移，偏移的数量是 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 的数量。\n例如：master"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 表示 master 指向的 commit 之前的那个 commit； "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 表示 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" 所指向的 commit\n往前数两个 commit。\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" 的用法：在 commit 的后面加上 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" 号和一个数，可以把 commit 往回偏移，偏移的数量是 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" 号后面的数。\n例如："),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" 表示 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" 指向的 commit往前数 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" 个 commit。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git add .\ngit commit --amend\n\ngit rebase --continue\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br"),e("span",{staticClass:"line-number"},[this._v("3")]),e("br"),e("span",{staticClass:"line-number"},[this._v("4")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/rebase-i-continue.gif",alt:"图片"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_3、回滚代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、回滚代码"}},[this._v("#")]),this._v(" 3、回滚代码")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"reset-hard-丢弃最新的提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-hard-丢弃最新的提交"}},[this._v("#")]),this._v(" reset --hard 丢弃最新的提交")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("写完回头看了看，你觉得「不行这得重新写」。那么你可以用 "),e("code",[this._v("reset --hard")]),this._v(" 来撤销这条 "),e("code",[this._v("commit")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("// HEAD 表示 HEAD^ 往回数一个位置的 commit\ngit reset --hard HEAD^\n\n// git reset --hard 目标commit\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br"),e("span",{staticClass:"line-number"},[this._v("3")]),e("br"),e("span",{staticClass:"line-number"},[this._v("4")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/reset.gif",alt:"图片"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("不过，就像图上显示的，你被撤销的那条提交并没有消失，只是你不再用到它了。如果你在撤销它之前记下了它的 "),e("code",[this._v("SHA-1")]),this._v(" 码，那么你还可以通过 "),e("code",[this._v("SHA-1")]),this._v(" 来找到他它。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"丢弃的不是最新的提交-——-用交互式-rebase-撤销提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#丢弃的不是最新的提交-——-用交互式-rebase-撤销提交"}},[this._v("#")]),this._v(" 丢弃的不是最新的提交 —— 用交互式 rebase 撤销提交")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("交互式 "),e("code",[this._v("rebase")]),this._v(" 可以用来修改某些旧的 "),e("code",[this._v("commit")]),this._v("s。其实除了修改提交，它还可以用于撤销提交。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("比如：想撤销倒数第二条 "),e("code",[this._v("commit")]),this._v("，可以使用：git rebase --hard 目标commit：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/rebase-hard.png",alt:"图片"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git rebase --hard HEAD^^\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("执行上面这条指令后，会跳到 "),e("code",[this._v("commit")]),this._v(" 序列的编辑界面，直接删掉要撤销的那一行")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/rebase-commit.gif",alt:"图片"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git reset --hard HEAD^ // 删除最近一次提交\ngit rebase -i HEAD~3 // 显示最近三次调教，手动删除其中一次提交或pick改为d\ngit rebase --onto commit3 commit4 commit5 // 移除commit4，commit5转移到commit3之后\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br"),e("span",{staticClass:"line-number"},[this._v("3")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"代码已经-push-上去了才发现写错"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码已经-push-上去了才发现写错"}},[this._v("#")]),this._v(" 代码已经 push 上去了才发现写错")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"_1-出错的内容在你自己的-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-出错的内容在你自己的-branch"}},[this._v("#")]),this._v(" 1. 出错的内容在你自己的 branch")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("强制 "),e("code",[this._v("push")]),this._v(" 代码命令，"),e("code",[this._v("-f")]),this._v(" 是 "),e("code",[this._v("--force")]),this._v(" 的缩写，")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git push origin branch1 -f\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"_2-出错的内容已经合并到-master"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-出错的内容已经合并到-master"}},[this._v("#")]),this._v(" 2. 出错的内容已经合并到 master")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在别的分支不能强制 "),e("code",[this._v("push")]),this._v(" 提交代码，会把别人的代码冲掉")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("希望撤销哪个 "),e("code",[this._v("commit")]),this._v("，就把它填在后面：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git revert HEAD^ 撤销上一次提交\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("上面这行代码就会增加一条新的 "),e("code",[this._v("commit")]),this._v("，它的内容和倒数第二个 "),e("code",[this._v("commit")]),this._v(" 是相反的，从而和倒数第二个 "),e("code",[this._v("commit")]),this._v(" 相互抵消，达到撤销的效果。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("在 "),s("code",[t._v("revert")]),t._v(" 完成之后，把新的 "),s("code",[t._v("commit")]),t._v(" 再 "),s("code",[t._v("push")]),t._v(" 上去，这个 "),s("code",[t._v("commit")]),t._v(" 的内容就被撤销了。它和前面所介绍的撤销方式相比，最主要的区别是，这次改动只是被「反转」了，并没有在历史中消失掉，你的历史中会存在两条 "),s("code",[t._v("commit")]),t._v(" ：一个原始 "),s("code",[t._v("commit")]),t._v(" ，一个对它的反转 "),s("code",[t._v("commit")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_4、reset-的本质——不止可以撤销提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、reset-的本质——不止可以撤销提交"}},[this._v("#")]),this._v(" 4、reset 的本质——不止可以撤销提交")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1、reset-hard：重置工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、reset-hard：重置工作目录"}},[this._v("#")]),this._v(" 1、reset --hard：重置工作目录")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("reset --hard")]),t._v(" 会在重置 "),s("code",[t._v("HEAD")]),t._v(" 和 "),s("code",[t._v("branch")]),t._v(" 的同时，重置工作目录里的内容。当你在 "),s("code",[t._v("reset")]),t._v(" 后面加了 "),s("code",[t._v("--hard")]),t._v(" 参数时，你的工作目录里的内容会被完全重置为和 "),s("code",[t._v("HEAD")]),t._v(" 的新位置相同的内容。换句话说，就是你的未提交的修改会被全部擦掉。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2、reset-soft：保留工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、reset-soft：保留工作目录"}},[this._v("#")]),this._v(" 2、reset --soft：保留工作目录")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("reset --soft")]),t._v(" 会在重置 "),s("code",[t._v("HEAD")]),t._v(" 和 "),s("code",[t._v("branch")]),t._v(" 时，保留工作目录和暂存区中的内容，并把重置 "),s("code",[t._v("HEAD")]),t._v(" 所带来的新的差异放进暂存区。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3、reset-不加参数：保留工作目录，并清空暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、reset-不加参数：保留工作目录，并清空暂存区"}},[this._v("#")]),this._v(" 3、reset 不加参数：保留工作目录，并清空暂存区")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("reset")]),this._v(" 如果不加参数，那么默认使用 "),e("code",[this._v("--mixed")]),this._v(" 参数。它的行为是：保留工作目录，并且清空暂存区。也就是说，工作目录的修改、暂存区的内容以及由 "),e("code",[this._v("reset")]),this._v(" 所导致的新的文件差异，都会被放进工作目录。简而言之，就是「把所有差异都混合（mixed）放在工作目录中」。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git reset HEAD^\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("工作目录的内容和 "),e("code",[this._v("--soft")]),this._v(" 一样会被保留，但和 "),e("code",[this._v("--soft")]),this._v(" 的区别在于，它会把暂存区清空：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[this._v("#")]),this._v(" 小结")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("重置 HEAD 以及它所指向的 branch 的位置。同时，介绍了 reset 的三种参数：\n\n"),s("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--hard：重置位置的同时，清空工作目录的所有改动；")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--soft：重置位置的同时，保留工作目录和暂存区的内容，并把重置 HEAD 的位置所导致的新的文件差异放进暂存区。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--mixed（默认）：重置位置的同时，保留工作目录的内容，并清空暂存区。")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_5、checkout-的本质"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、checkout-的本质"}},[this._v("#")]),this._v(" 5、checkout 的本质")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("git checkout branch名")]),t._v(" 的本质，其实是把 "),s("code",[t._v("HEAD")]),t._v(" 指向指定的 "),s("code",[t._v("branch")]),t._v("，然后签出这个 "),s("code",[t._v("branch")]),t._v(" 所对应的 "),s("code",[t._v("commit")]),t._v(" 的工作目录。所以同样的，"),s("code",[t._v("checkout")]),t._v(" 的目标也可以不是 "),s("code",[t._v("branch")]),t._v("，而直接指定某个 "),s("code",[t._v("commit")]),s("br"),t._v("下面这些都可以：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git checkout HEAD^^\ngit checkout master~5\ngit checkout 78a4bc\ngit checkout 78a4bc^\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br"),e("span",{staticClass:"line-number"},[this._v("3")]),e("br"),e("span",{staticClass:"line-number"},[this._v("4")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git checkout filename\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"checkout-和-reset-的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#checkout-和-reset-的不同"}},[this._v("#")]),this._v(" checkout 和 reset 的不同")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("checkout")]),t._v(" 和 "),s("code",[t._v("reset")]),t._v(" 都可以切换 "),s("code",[t._v("HEAD")]),t._v(" 的位置，它们除了有许多细节的差异外，最大的区别在于："),s("code",[t._v("reset")]),t._v(" 在移动 "),s("code",[t._v("HEAD")]),t._v(" 时会带着它所指向的 "),s("code",[t._v("branch")]),t._v(" 一起移动，而 "),s("code",[t._v("checkout")]),t._v(" 不会。当你用 "),s("code",[t._v("checkout")]),t._v(" 指向其他地方的时候，"),s("code",[t._v("HEAD")]),t._v(" 和 它所指向的 "),s("code",[t._v("branch")]),t._v(" 就自动脱离了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_6、stash：临时存放工作目录的改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、stash：临时存放工作目录的改动"}},[this._v("#")]),this._v(" 6、stash：临时存放工作目录的改动")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("git stash")]),this._v(" 指令可以帮你把工作目录的内容全部放在你本地的一个独立的地方，它不会被提交，也不会被删除，可以先去做别的事情，忙完其他的事情，再切换你的分支，释放缓存")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git stash\n// 切回原来的分支，再释放缓存\ngit stash pop\n\ngit stash list [<options>]// 列出所有的缓存记录\ngit stash show [<stash>]\ngit stash drop [-q|--quiet] [<stash>]\ngit stash (pop | apply) [--index] [-q|--quiet] [<stash>] // 出栈，恢复缓存\ngit stash branch <branchname> [<stash>]\ngit stash save \ngit stash push\ngit stash clear\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：没有被 track 的文件（即从来没有被 add 过的文件不会被 stash 起来，因为 Git 会忽略它们。如果想把这些文件也一起 stash，可以加上 "),e("code",[this._v("-u")]),this._v(" 参数，它是 "),e("code",[this._v("--include-untracked")]),this._v(" 的简写。就像这样：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git stash -u\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_7、branch-删过了才想起来有用？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、branch-删过了才想起来有用？"}},[this._v("#")]),this._v(" 7、branch 删过了才想起来有用？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"reflog-：引用的-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reflog-：引用的-log"}},[this._v("#")]),this._v(" reflog ：引用的 log")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("reflog")]),t._v(' 是 "reference log" 的缩写，使用它可以查看 Git 仓库中的引用的移动记录。如果不指定引用，它会显示 '),s("code",[t._v("HEAD")]),t._v(" 的移动记录。假如你误删了 "),s("code",[t._v("branch1")]),t._v(" 这个 "),s("code",[t._v("branch")]),t._v("，那么你可以查看一下 "),s("code",[t._v("HEAD")]),t._v(" 的移动历史：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git reflog\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/reflog.wbp",alt:"图片"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("从图中可以看出，"),s("code",[t._v("HEAD")]),t._v(" 的最后一次移动行为是「从 "),s("code",[t._v("branch1")]),t._v(" 移动到 "),s("code",[t._v("master")]),t._v("」。而在这之后，"),s("code",[t._v("branch1")]),t._v(" 就被删除了。所以它之前的那个 "),s("code",[t._v("commit")]),t._v(" 就是 "),s("code",[t._v("branch1")]),t._v(" 被删除之前的位置了，也就是第二行的 "),s("code",[t._v("c08de9a")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("所以现在就可以切换回 "),e("code",[this._v("c08de9a")]),this._v("，然后重新创建 "),e("code",[this._v("branch1")]),this._v(" ：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git checkout c08de9a\ngit checkout -b branch1\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br"),e("span",{staticClass:"line-number"},[this._v("2")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这样，你刚删除的 "),e("code",[this._v("branch1")]),this._v(" 就找回来了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"查看其他引用的-reflog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看其他引用的-reflog"}},[this._v("#")]),this._v(" 查看其他引用的 reflog")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("reflog")]),this._v(" 默认查看 "),e("code",[this._v("HEAD")]),this._v(" 的移动历史，除此之外，也可以手动加上名称来查看其他引用的移动历史，例如某个 "),e("code",[this._v("branch")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("git reflog master\n")])]),this._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[this._v("1")]),e("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/images/git/reflog-master.png",alt:"图片"}})])}],!1,null,null,null);e.default=r.exports}}]);